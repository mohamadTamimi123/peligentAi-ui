name: Deploy to Production

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  NODE_VERSION: '18'

jobs:
  # -----------------------
  # Build & Test Job
  # -----------------------
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
        
      - name: Install dependencies
        run: npm ci
      
      - name: Run linting
        run: npm run lint
      
      - name: Run type checking
        run: npm run type-check
      
      - name: Build application
        run: npm run build
      
      - name: Run tests (if available)
        run: npm test --if-present

  # -----------------------
  # Deploy Job
  # -----------------------
  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e

            APP_DIR=/home/***/app/ui
            REPO_URL=https://github.com/<YOUR_USERNAME>/<YOUR_REPO>.git

            # اگر ریپو private است از GitHub Token استفاده کن
            if [ -n "${{ secrets.GITHUB_TOKEN }}" ]; then
              REPO_URL=https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/<YOUR_USERNAME>/<YOUR_REPO>.git
            fi

            # اگر پوشه وجود دارد ولی git repo نیست → پاک کن
            if [ -d "$APP_DIR" ] && [ ! -d "$APP_DIR/.git" ]; then
              echo "⚠️ $APP_DIR exists but is not a git repo. Removing..."
              rm -rf "$APP_DIR"
            fi

            # اگر پوشه وجود ندارد → کلون کن
            if [ ! -d "$APP_DIR" ]; then
              mkdir -p /home/***/app
              cd /home/***/app
              git clone $REPO_URL ui
            fi

            cd $APP_DIR

            # برو به آخرین نسخه main یا master
            git fetch origin
            if git rev-parse --verify origin/main >/dev/null 2>&1; then
              git reset --hard origin/main
            else
              git reset --hard origin/master
            fi

            # نصب پکیج‌ها و بیلد
            npm ci
            npm run build

            # اجرای برنامه با pm2
            if ! pm2 describe agent-ui > /dev/null; then
              pm2 start npm --name "agent-ui" -- start
            else
              pm2 restart agent-ui
            fi

            pm2 save
            echo "🚀 Deployment finished successfully"
